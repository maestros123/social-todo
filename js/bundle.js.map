{"version":3,"sources":["webpack:///./js/app.js","webpack:///./js/modules/addLocal.js","webpack:///./js/modules/addTodo.js","webpack:///./js/modules/bindEvents.js","webpack:///./js/modules/calculatePercentage.js","webpack:///./js/modules/closeModal.js","webpack:///./js/modules/createInLocal.js","webpack:///./js/modules/createTodo.js","webpack:///./js/modules/delTodo.js","webpack:///./js/modules/editModalOptions.js","webpack:///./js/modules/editPersonal.js","webpack:///./js/modules/editTodo.js","webpack:///./js/modules/getDate.js","webpack:///./js/modules/getTime.js","webpack:///./js/modules/globals.js","webpack:///./js/modules/overdueTask.js","webpack:///./js/modules/repeatTask.js","webpack:///./js/modules/showTasks.js","webpack:///./js/modules/toggleOptions.js","webpack:///./js/modules/toggleTodo.js","webpack:///./js/modules/translateData.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"names":[],"mappings":"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AK,UAAU,+DAAyB;AACxC,QAAQ,kEAA4B;AACpC,uBAAuB,KAAK,iDAAW,CAAC;AACxC,gBAAgB,0CAAI;AACpB,gBAAgB,iDAAW,CAAC,0CAAI;AAChC,4DAA4D,0CAAI;AAChE;AACA;AACA;AACA,IAAI,6DAAmB;AACvB;;AAEA,iEAAe,cAAc,E;;;;;;;;;;;;;;;;;;;;AC/B7B,CAAiC;AACW;;AAE5C;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA,a;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,a;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,4D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;;AAEL;AACA,IAAI,kDAAY;AAChB;AACA;AACA,gBAAgB,uDAAa;AAC7B;AACA;AACA,gBAAgB,uDAAa;AAC7B;AACA;AACA,gBAAgB,uDAAa;AAC7B;AACA;AACA,gBAAgB,uDAAa;AAC7B;AACA;AACA,KAAK;;;AAGL;AACA,iEAAe,gBAAgB,E;;;;;;;;;;;;;;;;;;AC3F/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA,iEAAe,YAAY,E;;;;;;;;;;;;;;;;;;;;;ACvD3B,CAAkD;AACZ;;AAEtC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,0DAAgB;;AAEpB;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,IAAI,oDAAU;;;AAGd;;AAEA,iEAAe,YAAY,E;;;;;;;;;;;;;;;;;;AChC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS,GAAG,UAAU,GAAG,QAAQ;;AAEvD;AACA;;AAEA,iEAAe,OAAO,E;;;;;;;;;;;;;;;;;;ACpBtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iEAAe,OAAO,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBtB;;AAEO;AACP;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;;;;;;;;ACPA,CAEmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,IAAI,kDAAY;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA,iCAAiC;AACjC;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA,KAAK;AACL;;;AAGA,iEAAe,WAAW,E;;;;;;;;;;;;;;;;;;;ACjE1B,CAAgC;;AAEhC;AACA;;AAEA;AACA;;AAEA,+B;AACA;AACA,mBAAmB,iDAAO;AAC1B,KAAK;AACL;AACA,mBAAmB,iDAAO,U;AAC1B,KAAK;AACL;AACA,mBAAmB,iDAAO;AAC1B,KAAK;AACL;AACA,mBAAmB,iDAAO;AAC1B,K;AACA;AACA;AACA;;AAEA,iEAAe,UAAU,E;;;;;;;;;;;;;;;;;;;ACzBzB,CAEmB;;AAEnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,kDAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,SAAS;AACT,KAAK;;;AAGL;;AAEA,iEAAe,SAAS,E;;;;;;;;;;;;;;;;;;ACzDxB;AACA;AACA,iDAAiD,OAAO;;AAExD;AACA;AACA,+BAA+B,OAAO;AACtC,+BAA+B,OAAO;AACtC,+BAA+B,OAAO;AACtC,+BAA+B,OAAO;AACtC,+BAA+B,OAAO;AACtC,KAAK;AACL;AACA,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;;AAE1C,kDAAkD,OAAO;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;AAC1C,mCAAmC,OAAO;;AAE1C,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;;AAGA;;AAEA,iEAAe,aAAa,E;;;;;;;;;;;;;;;;;;;;;AChD5B,CAAwD;AAClB;AACuB;;AAE7D;;AAEA;AACA;AACA;;AAEA,QAAQ,uDAAiB;AACzB,QAAQ,kEAA4B;AACpC,KAAK,UAAU,+DAAyB;AACxC,QAAQ,0DAAoB;AAC5B;;AAEA;AACA,IAAI,6DAAmB;;AAEvB,mBAAmB,KAAK,iDAAW,CAAC;AACpC,YAAY,0CAAI;;AAEhB,gBAAgB,0CAAI;AACpB,gBAAgB,0CAAI;AACpB,aAAa;AACb,gBAAgB,0CAAI;AACpB,oBAAoB,0CAAI;AACxB,oBAAoB,oDAAU,CAAC,0CAAI;AACnC;;AAEA;;AAEA,wDAAwD,0CAAI;AAC5D;AACA;AACA;;AAEA,iEAAe,cAAc,E;;;;;;;;;;;;;;;;;;;ACpC7B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,IAAI,GAAG,MAAM,GAAG,KAAK;;AAE5C;AACA;;AAEA,iEAAe,aAAa,E;;;;;;UCjB5B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["import addTodoItem from './modules/addTodo';\r\nimport createInLocal from './modules/createInLocal';\r\nimport calculatePercentage from './modules/calculatePercentage';\r\nimport getTime from './modules/getTime';\r\nimport showTasks from './modules/showTasks';\r\nimport editPersonal from './modules/editPersonal';\r\nimport overdueTask from './modules/overdueTask';\r\n\r\naddTodoItem();\r\ncreateInLocal();\r\ncalculatePercentage();\r\ngetTime();\r\nshowTasks();\r\neditPersonal();\r\noverdueTask();\r\n\r\nconst modalSwitch = document.querySelectorAll('.switch');\r\nmodalSwitch.forEach(item => {\r\n\r\n    item.addEventListener('click', () => {\r\n        let round = item.querySelector('.switch-round'),\r\n            parent = item.parentElement,\r\n            parentMore = parent.querySelector('.modal-dialog-item-more');\r\n\r\n        round.classList.toggle('switched');\r\n        item.classList.toggle('active');\r\n        parent.classList.toggle('active');\r\n        parentMore.classList.toggle('active');\r\n    });\r\n});\r\n\r\n\r\n\r\nsetInterval(overdueTask, 60000);\r\n\r\nsetInterval(getTime, 60000);\r\n\r\n","import { list } from './globals';\r\n\r\n// Добавление задач в переменную из локального хранилища\r\n\r\nfunction addLocal(title, id, complete, date, time, priority, repeat) {\r\n    \r\n    list.push({\r\n        name: title,\r\n        id: id,\r\n        check: complete,\r\n        date: date, \r\n        time: time,\r\n        priority: priority,\r\n        repeat: repeat\r\n    });\r\n    localStorage.setItem('ToDo', JSON.stringify(list));\r\n}\r\n\r\nexport default addLocal;","import {todoForm, todoList, addInput, list } from './globals';\r\nimport createTodoItem from './createTodo';\r\n\r\n// Добавление задачи на страницу\r\n\r\nlet id;\r\n\r\nfunction addTodoItem() {\r\n\r\n    todoForm.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n\r\n        if (list.length !== 0) {\r\n            id = list.length + 1;\r\n            list.forEach(item => {\r\n                if (item.id == id) {\r\n                    id++;\r\n                }\r\n            });\r\n        } else {\r\n            id = 1;\r\n        }\r\n\r\n        const todoItem = addInput.value;\r\n\r\n        if (todoItem) {\r\n            createTodoItem(todoItem, id, todoList);\r\n\r\n        } else {\r\n            alert('Задача не введена!');\r\n        }\r\n\r\n        addInput.value = '';\r\n    });\r\n\r\n}\r\n\r\nexport default addTodoItem;","import toggleTodoItem from './toggleTodo';\r\nimport editTodoItem from './editTodo';\r\nimport deleteTodoItem from './delTodo';\r\n\r\n// Назначение событий на кнопки\r\n\r\nfunction bindEvents(todoItem) {\r\n    const checkbox = todoItem.querySelector('.todo-item-checkbox'),\r\n        editButton = todoItem.querySelector('.todo-item-edit'),\r\n        deleteButton = todoItem.querySelector('.todo-item-del');\r\n\r\n    checkbox.addEventListener('change', toggleTodoItem);\r\n    editButton.addEventListener('click', editTodoItem);\r\n    deleteButton.addEventListener('click', deleteTodoItem);\r\n}\r\n\r\nexport default bindEvents;","import { list } from './globals';\r\n\r\n// Расчет процента выполненных задач\r\n\r\nfunction calculatePercentage () {\r\n    let donePercent = document.querySelector('.todo-header-done-percent'),\r\n        donePercentText = document.querySelector('.todo-header-done-percent p'),\r\n        totalTodo = list.length,\r\n        doneTodo = document.querySelectorAll('.todo-item.completed').length;\r\n\r\n    if (totalTodo === 0) {\r\n        donePercentText.textContent = '0%';\r\n        donePercent.style.width = '0%';\r\n    } else {\r\n        let percentTodo = Math.round((100 / totalTodo) * doneTodo);\r\n    \r\n        donePercentText.textContent = `${percentTodo}%`;\r\n        donePercent.style.width = `${percentTodo}%`;\r\n    }\r\n\r\n    \r\n} \r\n\r\nexport default calculatePercentage;\r\n    \r\n","import { list } from './globals';\r\nimport translateData from './translateData';\r\nimport getDate from './getDate';\r\nimport overdueTask from './overdueTask';\r\n// Действия при закрытии модального окна\r\n\r\nfunction closeModal(listItem) {\r\n    let modal = document.querySelector('.modal'),\r\n        modalDialog = modal.querySelector('.modal-dialog'),\r\n        modalSwitch = modal.querySelectorAll('.switch');\r\n\r\n    const close = modal.querySelector('.modal-close');\r\n\r\n    let title = listItem.querySelector('.todo-item-title'),\r\n        priority = listItem.querySelector('.todo-item-priority'),\r\n        priorityText = listItem.querySelector('.todo-item-priority p'),\r\n        dateTodo = listItem.querySelector('.todo-item-comment-date'),\r\n        timeTodo = listItem.querySelector('.todo-item-comment-time');\r\n\r\n    close.addEventListener('click', (saveOptions));\r\n\r\n\r\n    function saveOptions() {\r\n        modalSwitch.forEach(item => {\r\n\r\n            if (item.classList.contains('active')) { // Сохранение всех опций \r\n\r\n                if (item.parentElement.querySelector('input') != null) {\r\n\r\n                    if (item.parentElement.classList.contains('modal-dialog-name')) { // Название задачи\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            if (list[i].id == modal.dataset.modal) {\r\n                                list[i].name = item.parentElement.querySelector('input').value;\r\n                                localStorage.setItem('ToDo', JSON.stringify(list));\r\n                                title.innerText = item.parentElement.querySelector('input').value;\r\n                            }\r\n                        }\r\n\r\n                    } else if (item.parentElement.classList.contains('modal-dialog-date')) {// Дата задачи\r\n                        let date = item.parentElement.querySelector('input').value;\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            if (list[i].id == modal.dataset.modal) {\r\n                                list[i].date = date;\r\n                                localStorage.setItem('ToDo', JSON.stringify(list));\r\n                                let fullDate = translateData(date);\r\n                                dateTodo.innerText = fullDate;\r\n                            }\r\n                        }\r\n                    } else if (item.parentElement.classList.contains('modal-dialog-time')) { // Время задачи\r\n                        let time = item.parentElement.querySelector('input').value;\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            if (list[i].id == modal.dataset.modal) {\r\n                                list[i].time = item.parentElement.querySelector('input').value;\r\n                                localStorage.setItem('ToDo', JSON.stringify(list));\r\n                                timeTodo.innerText = time;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (item.parentElement.classList.contains('modal-dialog-priority')) { // Приоритет задачи\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            if (list[i].id == modal.dataset.modal) {\r\n                                list[i].priority = item.parentElement.querySelector('p.priority-active').dataset.priority;\r\n                                localStorage.setItem('ToDo', JSON.stringify(list));\r\n                                if (list[i].priority == 'normal') {\r\n                                    priority.classList.add('normal');\r\n                                    priority.classList.remove('high');\r\n                                    priorityText.innerText = '!';\r\n                                } else if (list[i].priority == 'high') {\r\n                                    priority.classList.remove('normal');\r\n                                    priority.classList.add('high');\r\n                                    priorityText.innerText = '!!';\r\n                                } else {\r\n                                    priority.classList.remove('normal');\r\n                                    priority.classList.remove('high');\r\n                                    priorityText.innerText = '';\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (item.parentElement.classList.contains('modal-dialog-repeat')) { // Повторяемость задачи\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            if (list[i].id == modal.dataset.modal) {\r\n                                list[i].repeat = item.parentElement.querySelector('p.repeat-active').dataset.repeat;\r\n                                if (!list[i].date) {\r\n                                    let timeNow = new Date(),\r\n                                        fullDate = getDate(timeNow);\r\n                                    translateData(fullDate);\r\n                                    list[i].date = fullDate;\r\n                                    localStorage.setItem('ToDo', JSON.stringify(list));\r\n                                    let dateTodo = listItem.querySelector('.todo-item-comment-date');\r\n                                    fullDate = translateData(fullDate);\r\n                                    dateTodo.innerText = fullDate;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            } else { // Удалить опции, при их выключении\r\n                if (item.parentElement.classList.contains('modal-dialog-name')) {\r\n\r\n                } else if (item.parentElement.classList.contains('modal-dialog-date')) {\r\n\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        if (list[i].id == modal.dataset.modal) {\r\n                            delete(list[i].date);\r\n                            localStorage.setItem('ToDo', JSON.stringify(list));\r\n                            dateTodo.innerText = '';\r\n                        }\r\n                    }\r\n                } else if (item.parentElement.classList.contains('modal-dialog-time')) {\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        if (list[i].id == modal.dataset.modal) {\r\n                            delete(list[i].time);\r\n                            localStorage.setItem('ToDo', JSON.stringify(list));\r\n                            timeTodo.innerText = '';\r\n                        }\r\n                    }\r\n                } else if (item.parentElement.classList.contains('modal-dialog-priority')) {\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        if (list[i].id == modal.dataset.modal) {\r\n                            delete(list[i].priority);\r\n                            localStorage.setItem('ToDo', JSON.stringify(list));\r\n                            priority.classList.remove('normal');\r\n                            priority.classList.remove('high');\r\n                            priorityText.innerText = '';\r\n                        }\r\n                    }\r\n                } else if (item.parentElement.classList.contains('modal-dialog-repeat')) {\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        if (list[i].id == modal.dataset.modal) {\r\n                            delete(list[i].repeat);\r\n                            localStorage.setItem('ToDo', JSON.stringify(list));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            overdueTask();\r\n\r\n        });\r\n        close.removeEventListener('click', (saveOptions));\r\n        modalDialog.classList.remove('modal-dialog-open');\r\n        setTimeout(() => {\r\n            modal.style.display = '';\r\n        }, 300);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default closeModal;","\r\nimport createTodoItem from './createTodo';\r\nimport { list, todoList, todoListComplete } from './globals';\r\n\r\n// Добавление элементов на страницу из локального хранилища\r\n\r\nfunction createInLocal () {\r\n    let itemInLocal = JSON.parse(localStorage.getItem('ToDo'));\r\n\r\n    let id = list.length;\r\n\r\nif (itemInLocal == null) {\r\n    id = 0;\r\n} else {\r\n    id = list.length;\r\n    itemInLocal.forEach((item, i) => {\r\n        if (itemInLocal[i].check === false) {\r\n            createTodoItem(item.name, item.id, todoList, item.date, item.time, item.priority, item.repeat);\r\n        } else {\r\n            createTodoItem(item.name, item.id, todoListComplete, item.date, item.time, item.priority, item.repeat);\r\n        }\r\n    }); \r\n}\r\n\r\n}\r\n\r\nexport default createInLocal;","import { todoListComplete, todoList } from './globals';\r\nimport addLocal from './addLocal';\r\nimport bindEvents from './bindEvents';\r\nimport calculatePercentage from './calculatePercentage';\r\nimport translateData from './translateData';\r\n\r\n// Создание новой задачи\r\n\r\nfunction createTodoItem(title, id, parent, date, time, priority, repeat) {\r\n   \r\n    const item = `<li class=\"todo-item\" data-id=${id}>\r\n                    <input class=\"todo-item-checkbox\" type=\"checkbox\">\r\n                    <div class=\"todo-item-priority\">\r\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                            viewBox=\"0 0 477.867 477.867\">\r\n                            <path d=\"M426.667,0.002H51.2C22.923,0.002,0,22.925,0,51.202v273.067c0,28.277,22.923,51.2,51.2,51.2h60.587l-9.284,83.456\r\n                            c-1.035,9.369,5.721,17.802,15.09,18.837c4.838,0.534,9.674-1.023,13.292-4.279l108.919-98.014h186.863\r\n                            c28.277,0,51.2-22.923,51.2-51.2V51.202C477.867,22.925,454.944,0.002,426.667,0.002z\" />\r\n                        </svg>\r\n                        <p></p>\r\n                    </div>\r\n                    <div class=\"todo-item-name\">\r\n                        <div class=\"todo-item-title\">${title}</div>\r\n                        <div class=\"todo-item-comment\"><div class=\"todo-item-comment-date\"></div><div class=\"todo-item-comment-time\"></div><div class=\"todo-item-comment-repeat\"></div></div>   \r\n                    </div>\r\n                    <div class=\"todo-item-change\">              \r\n                        <div class=\"todo-item-edit\"><img src=\"img/edit.svg\" alt=\"\"></div> \r\n                        <div class=\"todo-item-del\"><img src=\"img/delete.svg\" alt=\"\"></div>\r\n                    </div>                \r\n                </li>`;\r\n\r\n    const position = \"beforeend\";\r\n\r\n    parent.insertAdjacentHTML(position, item);\r\n\r\n    let todoItem = parent.lastChild;\r\n\r\n    if (parent === todoListComplete) {\r\n        todoItem.classList.add('completed');\r\n        let checkbox = todoItem.querySelector('.todo-item-checkbox');\r\n        checkbox.setAttribute('checked', 'checked');\r\n\r\n        addLocal(title, id, true, date, time, priority, repeat);\r\n    } else {\r\n        addLocal(title, id, false, date, time, priority, repeat);\r\n    }\r\n    \r\n    if (time) {\r\n        let timeTodo = todoItem.querySelector('.todo-item-comment-time');\r\n        timeTodo.innerText = time;\r\n    }\r\n\r\n    if (date) {\r\n        let fullDate = translateData(date);\r\n        let dateTodo = todoItem.querySelector('.todo-item-comment-date');\r\n        dateTodo.innerText = fullDate;\r\n    }\r\n\r\n    let itemPriority = todoItem.querySelector('.todo-item-priority'),\r\n        itemPriorityText = todoItem.querySelector('.todo-item-priority p');\r\n\r\n    if (priority) {\r\n        if (priority == 'normal') {\r\n            itemPriority.classList.add('normal');\r\n            itemPriorityText.innerText = '!';\r\n        } else if (priority == 'high') {\r\n            itemPriority.classList.add('high');\r\n            itemPriorityText.innerText = '!!';\r\n        } else {\r\n            itemPriority.classList.remove('normal');\r\n            itemPriority.classList.remove('high');\r\n            itemPriorityText.innerText = '';\r\n        }\r\n    }\r\n\r\n    bindEvents(todoItem);\r\n    calculatePercentage ();\r\n\r\n}\r\n\r\nexport default createTodoItem;","import { todoListComplete, todoList, list } from './globals';\r\nimport calculatePercentage from './calculatePercentage';\r\n\r\n// Удаление выбранной задачи\r\n\r\nfunction deleteTodoItem() {\r\n    let listItem = this.closest('.todo-item');\r\n    let listId = listItem.dataset.id;\r\n\r\n\r\n    if (todoList.contains(listItem)) {\r\n        todoList.removeChild(listItem);\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].id == listId) {\r\n\r\n                list.splice(i, 1);\r\n                localStorage.setItem('ToDo', JSON.stringify(list));\r\n            }\r\n        }\r\n    } else if (todoListComplete.contains(listItem)) {\r\n        todoListComplete.removeChild(listItem);\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].id == listId) {\r\n                list.splice(list[i], 1);\r\n                localStorage.setItem('ToDo', JSON.stringify(list));\r\n            }\r\n        }\r\n    }\r\n    calculatePercentage ();\r\n}\r\n\r\nexport default deleteTodoItem;","import { list } from './globals';\r\nimport toggleOptions from './toggleOptions';\r\n\r\n// Редактирование опций задачи \r\n\r\nfunction editModalOptions(dataId) {\r\n    let modal = document.querySelector('.modal'),\r\n        modalPriority = modal.querySelectorAll('.modal-dialog-priority p'),\r\n        modalRepeat = modal.querySelectorAll('.modal-dialog-repeat p');\r\n\r\n\r\n\r\n    modalPriority.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            let active = modal.querySelector('.priority-active');\r\n\r\n            if (!item.classList.contains('priority-active')) {\r\n                active.classList.remove('priority-active');\r\n                item.classList.add('priority-active');\r\n            } \r\n        });\r\n    });\r\n\r\n    modalRepeat.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            let active = modal.querySelector('.repeat-active');\r\n\r\n            if (!item.classList.contains('repeat-active')) {\r\n                active.classList.remove('repeat-active');\r\n                item.classList.add('repeat-active');\r\n            } \r\n        });\r\n    });\r\n\r\n    // Очищаем все опции\r\n    let modalItem = modal.querySelectorAll('.modal-dialog-item'),\r\n        switchItem = modal.querySelectorAll('.switch'),\r\n        switchRound = modal.querySelectorAll('.switch-round'),\r\n        modalMore = modal.querySelectorAll('.modal-dialog-item-more');\r\n\r\n    switchItem.forEach(el => el.classList.remove('active'));\r\n    switchRound.forEach(el => el.classList.remove('switched'));\r\n    modalMore.forEach(el => el.classList.remove('active'));\r\n    modalItem.forEach(el => {\r\n        el.classList.remove('active');\r\n        let itemMore =  el.querySelector('.modal-dialog-item-more');\r\n        if (itemMore.querySelector('input') != null) {\r\n            itemMore.querySelector('input').value = '';\r\n        } else {\r\n            if (el.classList.contains('modal-dialog-priority')) {\r\n                let priority = itemMore.querySelectorAll('p');\r\n                priority.forEach(item => {\r\n                    if (item.dataset.priority == 'low') {\r\n                        item.classList.add('priority-active');\r\n                    } else {\r\n                        item.classList.remove('priority-active');\r\n                    }\r\n                });\r\n            } else if (el.classList.contains('modal-dialog-repeat')) {\r\n                let repeat = itemMore.querySelectorAll('p'); \r\n                repeat.forEach(item => {\r\n                    if (item.dataset.repeat == 'day') {\r\n                        item.classList.add('priority-active');\r\n                    } else {\r\n                        item.classList.remove('priority-active');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    \r\n    // Устанавливаем опции, если они уже были выбраны \r\n    list.forEach(item => {\r\n        if (item.id == dataId) {\r\n            if (item.time) {\r\n                toggleOptions ('.modal-dialog-time', item.time);\r\n            }\r\n            if (item.date) {\r\n                toggleOptions ('.modal-dialog-date', item.date);\r\n            }\r\n            if (item.priority) {\r\n                toggleOptions ('.modal-dialog-priority', item.priority);\r\n            }\r\n            if (item.repeat) {\r\n                toggleOptions ('.modal-dialog-repeat', item.repeat);\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n}\r\nexport default editModalOptions;"," // Установка аватарки и имени\r\n\r\nfunction editPersonal() {\r\n    let avatar = document.querySelector('.personal-avatar-active img'),\r\n        avatarInLocal = localStorage.getItem('avatar'),\r\n        personalName = document.querySelector('.personal-info-title h2'),\r\n        personalNameInput = document.querySelector('.personal-info-title input'),\r\n        nameInLocal = localStorage.getItem('Name');\r\n\r\n        if (avatarInLocal) {\r\n            avatar.src = avatarInLocal;\r\n        }\r\n\r\n        if (nameInLocal) {\r\n            personalName.innerText = nameInLocal;\r\n        }\r\n\r\n    const personalEdit = document.querySelector('.personal-edit'),\r\n        personalAvatar = document.querySelector('.personal-avatar'),\r\n        personalAvatarActive = document.querySelector('.personal-avatar-active'),\r\n        personalAvatarImg = document.querySelector('.personal-avatar-active img'),\r\n        personalAvatarChoice = document.querySelector('.personal-avatar-choice'),\r\n        personalAvatars = document.querySelectorAll('.personal-avatar-choice-item img');\r\n\r\n    personalEdit.addEventListener('click', () => {\r\n        personalAvatar.style.width = '100%';\r\n        personalAvatarActive.style.display = 'none';\r\n        personalAvatarChoice.style.display = 'flex';\r\n\r\n        personalAvatars.forEach(item => {\r\n            item.addEventListener('click', () => {\r\n                personalAvatarImg.src = item.src;\r\n                personalAvatarChoice.style.display = 'none';\r\n                personalAvatarActive.style.display = 'block';\r\n                personalAvatar.style.width = '30%';\r\n\r\n                localStorage.setItem('avatar', item.src);\r\n            });\r\n        });\r\n    });\r\n\r\n    personalName.addEventListener('click', () => {\r\n        personalName.style.display = 'none';\r\n        personalNameInput.value = personalName.innerText;\r\n        personalNameInput.style.display = 'block';\r\n    });\r\n\r\n    personalNameInput.addEventListener('change', () => {\r\n        personalNameInput.style.display = 'none';\r\n        personalName.innerText = personalNameInput.value;\r\n        personalName.style.display = 'block';\r\n        localStorage.setItem('Name', personalName.innerText);\r\n    });\r\n}\r\n\r\n\r\nexport default editPersonal;","\r\nimport editModalOptions from './editModalOptions';\r\nimport closeModal from './closeModal';\r\n\r\n// Редактировние задачи \r\n\r\nfunction editTodoItem() {\r\n    const listItem = this.closest('.todo-item');\r\n\r\n    let title = listItem.querySelector('.todo-item-title'), \r\n        dataId = listItem.dataset.id;\r\n\r\n    let modal = document.querySelector('.modal'),\r\n        modalDialog = modal.querySelector('.modal-dialog'),\r\n        modalMore = modal.querySelector('.modal-dialog-item-more input');\r\n\r\n    editModalOptions(dataId);\r\n\r\n    modal.style.display = 'flex';\r\n\r\n    setTimeout(() => {\r\n        modalDialog.classList.add('modal-dialog-open');\r\n    }, 100);\r\n\r\n    modalMore.value = title.innerText;\r\n    modal.setAttribute('data-modal', dataId);\r\n\r\n    closeModal (listItem);\r\n    \r\n\r\n}\r\n\r\nexport default editTodoItem;","//Получение даты\r\n\r\nfunction getDate(date) {\r\n    let timeYear = date.getFullYear(),\r\n        timeMonth = date.getMonth() + 1,\r\n        timeDay = date.getDate();\r\n\r\n    if (timeMonth < 10) {\r\n        timeMonth = '0' + timeMonth;\r\n    }\r\n\r\n    if (timeDay < 10) {\r\n        timeDay = '0' + timeDay;\r\n    }\r\n\r\n    let fullDate = `${timeYear}-${timeMonth}-${timeDay}`;\r\n\r\n    return fullDate;\r\n}\r\n\r\nexport default getDate;","//Получение и установка времени слева в планировщике задач\r\n\r\nfunction getTime() {\r\n    const timeNow = new Date();\r\n    const timeHours = timeNow.getHours();\r\n    let timeMinutes = timeNow.getMinutes();\r\n\r\n    let hours = document.querySelector('.todo-header-hours');\r\n    let minutes = document.querySelector('.todo-header-minutes');\r\n\r\n    if (timeMinutes >= 0 && timeMinutes < 10) {\r\n        timeMinutes = '0' + timeMinutes;\r\n    }\r\n\r\n    hours.textContent = timeHours;\r\n    minutes.textContent = timeMinutes;\r\n}\r\nsetInterval(getTime, 60000);\r\nexport default getTime;","// Установка глобальных переменных\r\n\r\nexport let list = [],\r\n    todoForm = document.querySelector('#todo-form'),\r\n    addInput = document.querySelector('#add-input'),\r\n    todoList = document.querySelector('#todo-list'),\r\n    todoListComplete = document.querySelector('#todo-list-complete'),\r\n    todoItem = document.querySelectorAll('.todo-item');","import {\r\n    list\r\n} from './globals';\r\n\r\nfunction overdueTask() {\r\n    let timeNow = new Date(),\r\n        timeYear = timeNow.getFullYear(),\r\n        timeMonth = timeNow.getMonth() + 1,\r\n        timeDay = timeNow.getDate(),\r\n        timeHours = timeNow.getHours(),\r\n        timeMinutes = timeNow.getMinutes();\r\n\r\n    function addRedBorder(item) {\r\n        let todoItem = document.querySelectorAll('.todo-item');\r\n        todoItem.forEach(todo => {\r\n            if (todo.dataset.id == item.id) {\r\n                todo.style.backgroundColor = '#f3b9b9';\r\n            }\r\n        });\r\n    }\r\n\r\n    list.forEach(item => {\r\n        if (item.check != true) {\r\n            if (item.date) {\r\n                let year = item.date.slice(0, 4),\r\n                    month = item.date.slice(5, 7),\r\n                    day = item.date.slice(8, 10);\r\n\r\n                if (year >= timeYear) {\r\n                    if (month >= timeMonth) {\r\n                        if (day >= timeDay) {\r\n                            if (day == timeDay && item.time) {\r\n                                \r\n                                let hours = item.time.slice(0, 2),\r\n                                    minutes = item.time.slice(3, 5);\r\n\r\n                                if (hours >= timeHours) {\r\n                                    if (hours == timeHours) {\r\n                                        if (minutes >= timeMinutes) {\r\n\r\n                                        } else addRedBorder(item);\r\n                                    }\r\n                                    \r\n                                } else addRedBorder(item);\r\n                            }\r\n                        } else addRedBorder(item);\r\n                    } else addRedBorder(item);\r\n                } else addRedBorder(item);\r\n            }\r\n            if (item.time && !item.date) {\r\n                let hours = item.time.slice(0, 2),\r\n                    minutes = item.time.slice(3, 5);\r\n\r\n                if (hours >= timeHours) {\r\n                    if (minutes >= timeMinutes) {\r\n\r\n                    } else addRedBorder(item);\r\n                } else addRedBorder(item);\r\n            }\r\n\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default overdueTask;","import getDate from './getDate';\r\n\r\n// Если задача является повторяемой, устанавливаем ей опции\r\nfunction repeatTask(list) {\r\n\r\n    let timeNow, fullDate;\r\n    timeNow = new Date(list.date.replace(/-/g, ','));\r\n\r\n    if (list.repeat == 'day') {        \r\n        timeNow.setDate(timeNow.getDate() + 1);\r\n        fullDate = getDate(timeNow);\r\n    } else if (list.repeat == 'week') {\r\n        timeNow.setDate(timeNow.getDate() + 7);\r\n        fullDate = getDate(timeNow);   \r\n    } else if (list.repeat == 'month') {\r\n        timeNow.setMonth(timeNow.getMonth() + 1);\r\n        fullDate = getDate(timeNow);\r\n    } else if (list.repeat == 'year') {\r\n        timeNow.setFullYear(timeNow.getFullYear() + 1);\r\n        fullDate = getDate(timeNow);\r\n    } \r\n    list.date = fullDate;\r\n    list.check = false;\r\n}\r\n\r\nexport default repeatTask;","import {\r\n    list\r\n} from './globals';\r\n\r\n// Устанавливаем видимость задач (Все или на 1 день)\r\n\r\nfunction showTasks() {\r\n    let taskItem = document.querySelectorAll('.personal-task-item');\r\n\r\n    let timeNow = new Date(),\r\n        timeYear = timeNow.getFullYear(),\r\n        timeMonth = timeNow.getMonth() + 1,\r\n        timeDay = timeNow.getDate();\r\n\r\n    taskItem.forEach(task => {\r\n        task.addEventListener('click', () => {\r\n\r\n            if (!task.classList.contains('personal-task-item-active')) {\r\n                let taskActive = document.querySelector('.personal-task-item-active');\r\n\r\n                taskActive.classList.remove('personal-task-item-active');\r\n                task.classList.add('personal-task-item-active');\r\n\r\n                if (task.classList.contains('personal-task-daily')) {\r\n                    list.forEach(item => {\r\n                        if (item.date) {\r\n                            let year = item.date.slice(0, 4),\r\n                                month = item.date.slice(5, 7),\r\n                                day = item.date.slice(8, 10);\r\n\r\n                            if (year != timeYear || month != timeMonth || day != timeDay) {\r\n                                let todoItem = document.querySelectorAll('.todo-item');\r\n\r\n                                todoItem.forEach(todo => {\r\n                                    if (todo.dataset.id == item.id) {\r\n                                        todo.style.display = \"none\";\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                    });\r\n                } else {\r\n                    let todoItem = document.querySelectorAll('.todo-item');\r\n\r\n                    todoItem.forEach(todo => {\r\n                        todo.style.display = \"flex\";\r\n                    });\r\n                }\r\n            }\r\n\r\n        });\r\n    });\r\n\r\n\r\n}\r\n\r\nexport default showTasks;","function toggleOptions(parent, listKey) {\r\n    let modal = document.querySelector('.modal');\r\n    let modalElement = document.querySelector(`${parent}`);\r\n\r\n    // Если опции были выбраны ранее, модальное окно открывается с ними\r\n    if (modalElement.querySelector('input') != null) {\r\n        modal.querySelector(`${parent}`).classList.add('active');\r\n        modal.querySelector(`${parent} .switch`).classList.add('active');\r\n        modal.querySelector(`${parent} .switch-round`).classList.add('switched');\r\n        modal.querySelector(`${parent} .modal-dialog-item-more`).classList.add('active');\r\n        modal.querySelector(`${parent} input`).value = listKey;\r\n    } else {\r\n        if (modalElement.classList.contains('modal-dialog-priority')) {\r\n            modal.querySelector(`${parent}`).classList.add('active');\r\n            modal.querySelector(`${parent} .switch`).classList.add('active');\r\n            modal.querySelector(`${parent} .switch-round`).classList.add('switched');\r\n            modal.querySelector(`${parent} .modal-dialog-item-more`).classList.add('active');\r\n\r\n            let items = modal.querySelectorAll(`${parent} p`);\r\n            items.forEach(item => {\r\n                let active = modalElement.querySelector('.priority-active');\r\n\r\n                if (listKey == item.dataset.priority) {\r\n                    active.classList.remove('priority-active');\r\n                    item.classList.add('priority-active');\r\n                }\r\n            });\r\n        } else {\r\n            modal.querySelector(`${parent}`).classList.add('active');\r\n            modal.querySelector(`${parent} .switch`).classList.add('active');\r\n            modal.querySelector(`${parent} .switch-round`).classList.add('switched');\r\n            modal.querySelector(`${parent} .modal-dialog-item-more`).classList.add('active');\r\n\r\n            let items = modal.querySelectorAll(`${parent} p`);\r\n            items.forEach(item => {\r\n                let active = modalElement.querySelector('.repeat-active');\r\n                if (listKey == item.dataset.repeat) {\r\n                    active.classList.remove('repeat-active');\r\n                    item.classList.add('repeat-active');\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default toggleOptions;","import calculatePercentage from './calculatePercentage';\r\nimport repeatTask from './repeatTask';\r\nimport { todoList, todoListComplete, list } from './globals';\r\n\r\n// Переключение элемента в позицию checked\r\n\r\nfunction toggleTodoItem() {\r\n    let listItem = this.closest('.todo-item');\r\n    let listId = listItem.dataset.id;\r\n\r\n    if (todoList.contains(listItem)) {\r\n        todoListComplete.appendChild(listItem);\r\n    } else if (todoListComplete.contains(listItem)) {\r\n        todoList.appendChild(listItem);\r\n    }\r\n\r\n    listItem.classList.toggle('completed');\r\n    calculatePercentage ();\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i].id == listId) {\r\n            \r\n            if (list[i].check === true) {\r\n                list[i].check = false;\r\n            } else {\r\n                list[i].check = true;\r\n                if (list[i].repeat) {\r\n                    repeatTask(list[i]);\r\n                }\r\n                \r\n            }\r\n            \r\n            localStorage.setItem('ToDo', JSON.stringify(list));\r\n        }\r\n    }\r\n}\r\n\r\nexport default toggleTodoItem;","\r\n// Переводим дату в более удобочитаемый вид \r\n\r\nfunction translateData (date) {\r\n    let monthName = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\r\n\r\n    let year = date.slice(0,4),\r\n        month = date.slice(5,7),\r\n        day = date.slice(8,10);\r\n    \r\n    month = monthName[+month -1];\r\n\r\n    let fullDate = ` ${day} ${month} ${year} года`;\r\n\r\n    return fullDate;\r\n}\r\n\r\nexport default translateData;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/app.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}